on: push

jobs:
  deploy:
    name: Push to EC2 Instance
    runs-on: ubuntu-latest
      
    steps:
      - uses: actions/checkout@v3
      
      - name: Log In to Docker
        env:
          DOCKER_USER: "${{ secrets.DOCKER_USER }}"
          DOCKER_PASSWORD: "${{ secrets.DOCKER_PASSWORD }}"
        run:
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
          
      - name: Build and Push to Docker
        env:
          REPO: tescevents
        run: |
          docker build -t $REPO TescEvents
          docker tag $REPO:latest ${{ secrets.DOCKER_USER }}/$REPO:latest
          docker push ${{ secrets.DOCKER_USER }}/$REPO
        
      - name: Deploy to EC2 instance with ssh-action
        uses: appleboy/ssh-action@master
        with:
          host: "${{ secrets.HOST_DNS }}"
          username: "${{ secrets.USER }}"
          key: "${{ secrets.EC2_PRIVATE_KEY }}"
          envs: GITHUB_SHA
          script: |
            REPO=tescevents
            docker login -u "${{ secrets.DOCKER_USER }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            docker pull "${{ secrets.DOCKER_USER }}"/$REPO
            ids=$(docker ps -a -q)
            for id in $ids
            do
             echo "$id"
             docker stop $id && docker rm $id
            done
            docker system prune -f
            docker run --name tescevents 
            -p 443:80
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_PORT="${{ secrets.DB_PORT }}" \
            -e DB_DATABASE="${{ secrets.DB_DATABASE }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASS="${{ secrets.DB_PASS }}" \
            -e JWT_KEY="${{ secrets.JWT_KEY }}" \
            -e JWT_ISSUER="${{ secrets.JWT_ISSUER }}" \
            -e JWT_AUDIENCE="${{ secrets.JWT_AUDIENCE }}" \
            "${{ secrets.DOCKER_USER }}"/$REPO
